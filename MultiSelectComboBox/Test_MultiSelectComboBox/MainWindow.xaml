<Window
    x:Class="MultiSelectComboBoxTest1.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:MultiSelectComboBoxTest1"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="MainWindow"
    Width="800"
    Height="450"
    mc:Ignorable="d">
    <Window.DataContext>
        <local:ViewModel />
    </Window.DataContext>
    <ScrollViewer>
        <StackPanel>



            <!--  リストボックスにチェックボックスを載せただけの例  -->
            <Grid>
                <Grid.Resources>
                    <Style x:Key="ItemContainerStyle" TargetType="ListBoxItem">
                        <Setter Property="OverridesDefaultStyle" Value="True" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <CheckBox Content="{TemplateBinding Content}" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="Plum" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightGray" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Resources>
                <ListBox
                    Width="200"
                    Height="100"
                    ItemContainerStyle="{StaticResource ItemContainerStyle}"
                    ItemsSource="{Binding Data}" />
            </Grid>



            <!--  マルチセレクトコンボボックスコントロール1  -->
            <local:MultiSelectComboBox1
                x:Name="MC"
                Width="100"
                Height="30"
                Margin="0,20,0,0"
                HeaderFormat="個選択しています"
                ItemsSource="{Binding Items}"
                MaxHeaderItems="2"
                SelectAllContent="全て"
                SelectedItems="{Binding SelectedItems}"
                ToolTip="{Binding Path=Text, RelativeSource={RelativeSource Self}}" />



            <!--  チェックをRと表示する例  -->
            <!--  https://stackoverflow.com/questions/38344391/three-states-checkbox-style-change  -->
            <Grid Margin="0,20,0,0">
                <Grid.Resources>
                    <ControlTemplate x:Key="CheckBoxTemplate" TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
                            <BulletDecorator.Bullet>
                                <Themes:ClassicBorderDecorator
                                    x:Name="CheckMark"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderStyle="Sunken"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                    <Path
                                        x:Name="CheckMarkPath"
                                        Width="7"
                                        Height="7"
                                        Margin="1,1,1,1"
                                        Data="M 0 2.0 L 0 4.8 L 2.5 7.4 L 7.1 2.8 L 7.1 0 L 2.5 4.6 Z"
                                        Fill="{TemplateBinding Foreground}"
                                        FlowDirection="LeftToRight" />
                                </Themes:ClassicBorderDecorator>
                            </BulletDecorator.Bullet>
                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMarkPath" Property="Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="CheckMarkPath" Property="Stretch" Value="Uniform" />
                                <Setter TargetName="CheckMarkPath" Property="Data">
                                    <Setter.Value>
                                        <PathGeometry Figures="M16.6875,43.4995803833008L16.6875,67.8745803833008 27.375,67.8745803833008 30.2167949676514,67.6519241333008 32.8359375,66.9839553833008 35.173828125,65.8999710083008 37.171875,64.4292678833008 38.80078125,62.5777053833008 40.03125,60.3511428833008 40.8046875,57.7905960083008 41.0625,54.9370803833008 40.84423828125,52.389720916748 40.189453125,50.138256072998 39.09814453125,48.182689666748 37.5703125,46.5230178833008 35.62939453125,45.200267791748 33.298828125,44.255443572998 30.57861328125,43.688549041748 27.46875,43.4995803833008 16.6875,43.4995803833008z M8.8125,36.3745803833008L28.875,36.3745803833008 33.111328125,36.6499710083008 37.0078125,37.4761428833008 40.48828125,38.8648147583008 43.4765625,40.8277053833008 45.919921875,43.353099822998 47.765625,46.4292678833008 48.9257774353027,50.067943572998 49.3125,54.2808303833008 49.0488243103027,57.6499710083008 48.2578125,60.7261428833008 46.98046875,63.4976272583008 45.2578125,65.9527053833008 43.11328125,68.0796585083008 40.5703125,69.8667678833008 34.40625,72.3745803833008 34.40625,72.5620803833008 37.3359375,74.2730178833008 39.703125,76.5464553833008 41.9296875,79.5230178833008 44.390625,83.3902053833008 57,103.593330383301 47.625,103.593330383301 36.375,84.7495803833008 34.8515625,82.3179397583008 33.375,80.2730178833008 30.3984375,77.2495803833008 27.1171875,75.5386428833008 23.15625,74.9995803833008 16.6875,74.9995803833008 16.6875,103.593330383301 8.8125,103.593330383301 8.8125,36.3745803833008z" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="CheckMark" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="CheckMark" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                <Setter TargetName="CheckMarkPath" Property="Fill" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Grid.Resources>

                <CheckBox
                    Width="100"
                    Height="30"
                    Content="R"
                    IsChecked="{x:Null}"
                    IsThreeState="True"
                    Template="{StaticResource CheckBoxTemplate}" />
            </Grid>



            <!--  チェックRを改造  -->
            <Grid Margin="0,20,0,0">
                <Grid.Resources>
                    <ControlTemplate x:Key="CheckBoxTemplate" TargetType="{x:Type CheckBox}">
                        <Grid>
                            <Border
                                x:Name="RootBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Grid Margin="{TemplateBinding BorderThickness}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="LeftCol" Width="Auto" />
                                    <ColumnDefinition x:Name="RightCol" Width="*" />
                                </Grid.ColumnDefinitions>
                                <BulletDecorator Background="AliceBlue" SnapsToDevicePixels="true">
                                    <BulletDecorator.Bullet>
                                        <Themes:ClassicBorderDecorator
                                            x:Name="CheckMark"
                                            Grid.Column="0"
                                            Margin="1,1,1,1"
                                            Background="Aqua"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="2">
                                            <Path
                                                x:Name="CheckMarkPath"
                                                Width="10"
                                                Height="10"
                                                Margin="1"
                                                Data="M 0 2.0 L 0 4.8 L 2.5 7.4 L 7.1 2.8 L 7.1 0 L 2.5 4.6 Z"
                                                Fill="{TemplateBinding Foreground}"
                                                FlowDirection="LeftToRight" />
                                        </Themes:ClassicBorderDecorator>
                                    </BulletDecorator.Bullet>
                                </BulletDecorator>
                                <ContentPresenter
                                    x:Name="ContentPresenter"
                                    Grid.Column="1"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMarkPath" Property="Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="CheckMarkPath" Property="Stretch" Value="Uniform" />
                                <Setter TargetName="CheckMarkPath" Property="Data">
                                    <Setter.Value>
                                        <!--  これがRを表すらしいがどういう原理でそうなるのかさっぱりだ。  -->
                                        <!--<PathGeometry Figures="M16.6875,43.4995803833008L16.6875,67.8745803833008 27.375,67.8745803833008 30.2167949676514,67.6519241333008 32.8359375,66.9839553833008 35.173828125,65.8999710083008 37.171875,64.4292678833008 38.80078125,62.5777053833008 40.03125,60.3511428833008 40.8046875,57.7905960083008 41.0625,54.9370803833008 40.84423828125,52.389720916748 40.189453125,50.138256072998 39.09814453125,48.182689666748 37.5703125,46.5230178833008 35.62939453125,45.200267791748 33.298828125,44.255443572998 30.57861328125,43.688549041748 27.46875,43.4995803833008 16.6875,43.4995803833008z M8.8125,36.3745803833008L28.875,36.3745803833008 33.111328125,36.6499710083008 37.0078125,37.4761428833008 40.48828125,38.8648147583008 43.4765625,40.8277053833008 45.919921875,43.353099822998 47.765625,46.4292678833008 48.9257774353027,50.067943572998 49.3125,54.2808303833008 49.0488243103027,57.6499710083008 48.2578125,60.7261428833008 46.98046875,63.4976272583008 45.2578125,65.9527053833008 43.11328125,68.0796585083008 40.5703125,69.8667678833008 34.40625,72.3745803833008 34.40625,72.5620803833008 37.3359375,74.2730178833008 39.703125,76.5464553833008 41.9296875,79.5230178833008 44.390625,83.3902053833008 57,103.593330383301 47.625,103.593330383301 36.375,84.7495803833008 34.8515625,82.3179397583008 33.375,80.2730178833008 30.3984375,77.2495803833008 27.1171875,75.5386428833008 23.15625,74.9995803833008 16.6875,74.9995803833008 16.6875,103.593330383301 8.8125,103.593330383301 8.8125,36.3745803833008z" />-->
                                        <RectangleGeometry Rect="0,0,50,10" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="CheckMark" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="CheckMark" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                <Setter TargetName="CheckMarkPath" Property="Fill" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Grid.Resources>

                <CheckBox
                    Width="100"
                    Content="Rを改造"
                    IsChecked="{x:Null}"
                    IsThreeState="True"
                    Template="{StaticResource CheckBoxTemplate}" />
            </Grid>



            <!--  マイクロソフト公式サンプル  -->
            <!--  https://docs.microsoft.com/ja-jp/dotnet/desktop/wpf/controls/checkbox-styles-and-templates?view=netframeworkdesktop-4.8  -->
            <!--  チェックボックス構造解析用  -->
            <Grid Margin="0,20,0,0">
                <Grid.Resources>
                    <!--  Control colors.  -->
                    <Color x:Key="WindowColor">#FFE8EDF9</Color>
                    <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
                    <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

                    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
                    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
                    <Color x:Key="DisabledForegroundColor">#FF888888</Color>

                    <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
                    <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

                    <Color x:Key="ControlLightColor">White</Color>
                    <Color x:Key="ControlMediumColor">#FF7381F9</Color>
                    <Color x:Key="ControlDarkColor">#FF211AA9</Color>

                    <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
                    <Color x:Key="ControlPressedColor">#FF211AA9</Color>


                    <Color x:Key="GlyphColor">#FF444444</Color>
                    <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

                    <!--  Border colors  -->
                    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
                    <Color x:Key="BorderMediumColor">#FF888888</Color>
                    <Color x:Key="BorderDarkColor">#FF444444</Color>

                    <Color x:Key="PressedBorderLightColor">#FF888888</Color>
                    <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

                    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
                    <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

                    <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

                    <!--  Control-specific resources.  -->
                    <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
                    <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
                    <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

                    <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

                    <LinearGradientBrush x:Key="MenuPopupBrush" StartPoint="0.5,0" EndPoint="0.5,1">
                        <GradientStop Offset="0" Color="{DynamicResource ControlLightColor}" />
                        <GradientStop Offset="0.5" Color="{DynamicResource ControlMediumColor}" />
                        <GradientStop Offset="1" Color="{DynamicResource ControlLightColor}" />
                    </LinearGradientBrush>

                    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" StartPoint="0,0" EndPoint="1,0">
                        <LinearGradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Offset="0" Color="#000000FF" />
                                <GradientStop Offset="0.4" Color="#600000FF" />
                                <GradientStop Offset="0.6" Color="#600000FF" />
                                <GradientStop Offset="1" Color="#000000FF" />
                            </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>

                    <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
                        <Setter Property="SnapsToDevicePixels" Value="true" />
                        <Setter Property="OverridesDefaultStyle" Value="true" />
                        <!--<Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />-->
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type CheckBox}">
                                    <BulletDecorator Background="Transparent">
                                        <BulletDecorator.Bullet>
                                            <Border
                                                x:Name="Border"
                                                Width="13"
                                                Height="13"
                                                BorderThickness="1"
                                                CornerRadius="0">
                                                <Border.BorderBrush>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                        <LinearGradientBrush.GradientStops>
                                                            <GradientStopCollection>
                                                                <GradientStop Offset="0.0" Color="{DynamicResource BorderLightColor}" />
                                                                <GradientStop Offset="1.0" Color="{DynamicResource BorderDarkColor}" />
                                                            </GradientStopCollection>
                                                        </LinearGradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Border.BorderBrush>
                                                <Border.Background>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                        <LinearGradientBrush.GradientStops>
                                                            <GradientStopCollection>
                                                                <GradientStop Color="{DynamicResource ControlLightColor}" />
                                                                <GradientStop Offset="1.0" Color="{DynamicResource ControlMediumColor}" />
                                                            </GradientStopCollection>
                                                        </LinearGradientBrush.GradientStops>
                                                    </LinearGradientBrush>

                                                </Border.Background>
                                                <Grid>
                                                    <Path
                                                        x:Name="CheckMark"
                                                        Width="7"
                                                        Height="7"
                                                        Data="M 0 0 L 7 7 M 0 7 L 7 0"
                                                        SnapsToDevicePixels="False"
                                                        StrokeThickness="2"
                                                        Visibility="Collapsed">
                                                        <Path.Stroke>
                                                            <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                                        </Path.Stroke>
                                                    </Path>
                                                    <Path
                                                        x:Name="InderminateMark"
                                                        Width="7"
                                                        Height="7"
                                                        Data="M 0 7 L 7 0"
                                                        SnapsToDevicePixels="False"
                                                        StrokeThickness="2"
                                                        Visibility="Collapsed">
                                                        <Path.Stroke>
                                                            <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                                        </Path.Stroke>
                                                    </Path>
                                                </Grid>
                                            </Border>
                                        </BulletDecorator.Bullet>
                                        <ContentPresenter
                                            Margin="4,0,0,0"
                                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                            RecognizesAccessKey="True" />
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal" />
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).                       (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlMouseOverColor}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).                       (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedColor}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).                       (GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource PressedBorderDarkColor}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).                       (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource PressedBorderLightColor}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled" />
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="CheckStates">
                                                <VisualState x:Name="Checked">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Unchecked" />
                                                <VisualState x:Name="Indeterminate">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InderminateMark" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                    </BulletDecorator>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Grid.Resources>

                <CheckBox
                    Width="100"
                    Height="30"
                    VerticalContentAlignment="Center"
                    Content="マイクロソフト"
                    IsChecked="{x:Null}"
                    IsThreeState="True" />
            </Grid>



            <!--  チェックボックスの中身を大きくするサンプル  -->
            <!--  https://stackoverflow.com/questions/13481275/how-to-make-checkbox-bigger/70371693#70371693  -->
            <Grid Margin="0,20,0,0">
                <Grid.Resources>
                    <Style x:Key="FocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle
                                        Margin="2"
                                        SnapsToDevicePixels="true"
                                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                        StrokeDashArray="1 2"
                                        StrokeThickness="1" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style x:Key="OptionMarkFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle
                                        Margin="14,0,0,0"
                                        SnapsToDevicePixels="true"
                                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                        StrokeDashArray="1 2"
                                        StrokeThickness="1" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF" />
                    <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070" />
                    <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121" />
                    <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF" />
                    <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF" />
                    <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121" />
                    <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF" />
                    <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD" />
                    <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121" />
                    <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6" />
                    <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC" />
                    <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070" />
                    <Style x:Key="CheckBoxLarge" TargetType="{x:Type CheckBox}">
                        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
                        <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}" />
                        <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}" />
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type CheckBox}">
                                    <Grid
                                        x:Name="templateRoot"
                                        Background="Transparent"
                                        SnapsToDevicePixels="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Border
                                            x:Name="checkBoxBorder"
                                            Margin="1"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}">
                                            <!--  gridのw,hを24とか直接指定すると2倍とかになる  -->
                                            <Grid x:Name="markGrid">
                                                <!--  Width,Height,Stretch="Uniform",Margin  -->
                                                <Path
                                                    x:Name="optionMark"
                                                    Margin="2"
                                                    Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                                    Fill="{StaticResource OptionMark.Static.Glyph}"
                                                    Opacity="0"
                                                    Stretch="Uniform" />
                                                <Rectangle
                                                    x:Name="indeterminateMark"
                                                    Height="4"
                                                    Margin="2"
                                                    Fill="{StaticResource OptionMark.Static.Glyph}"
                                                    Opacity="0" />
                                            </Grid>
                                        </Border>
                                        <ContentPresenter
                                            x:Name="contentPresenter"
                                            Grid.Column="1"
                                            Margin="{TemplateBinding Padding}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Focusable="False"
                                            RecognizesAccessKey="True"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="HasContent" Value="true">
                                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                                            <Setter Property="Padding" Value="4,-1,0,0" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.MouseOver.Background}" />
                                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.MouseOver.Border}" />
                                            <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                                            <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.Disabled.Background}" />
                                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.Disabled.Border}" />
                                            <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.Disabled.Glyph}" />
                                            <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.Disabled.Glyph}" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.Pressed.Background}" />
                                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.Pressed.Border}" />
                                            <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.Pressed.Glyph}" />
                                            <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.Pressed.Glyph}" />
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="true">
                                            <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                                            <Setter TargetName="indeterminateMark" Property="Opacity" Value="0" />
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="{x:Null}">
                                            <Setter TargetName="optionMark" Property="Opacity" Value="0" />
                                            <Setter TargetName="indeterminateMark" Property="Opacity" Value="1" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Grid.Resources>

                <CheckBox
                    Width="100"
                    Height="30"
                    VerticalContentAlignment="Center"
                    Content="2倍サンプル"
                    IsChecked="{x:Null}"
                    IsThreeState="True"
                    Style="{StaticResource CheckBoxLarge}" />
            </Grid>



            <!--  BulletDecoratorサンプル  -->
            <!--  https://pmint.hatenadiary.org/entry/20130606/p1  -->
            <!--
                BulletDecoratorなるものでもチェックボックス部分の見た目を帰られるサンプルではあるが、使う機会はあるのだろうか。
                まぁ、こういうこともできるよ的な備忘録として残しておくけども
                って、よく見たら公式もBulletDecorator使ってますね・・・。
                うーん。研究の余地ありということで。
            -->
            <Grid Margin="0,20,0,0" HorizontalAlignment="Center">
                <Grid.Resources>
                    <!--  おまけ  -->
                    <Style x:Key="customcheckboxstyle1" TargetType="{x:Type CheckBox}">
                        <Setter Property="Margin" Value="10,1,10,1" />
                    </Style>
                    <Style x:Key="customcontentpresenterstyle1" TargetType="{x:Type ContentPresenter}">
                        <Setter Property="Margin" Value="5,0,0,0" />
                    </Style>
                    <!--  ここまでおまけ  -->

                    <ControlTemplate x:Key="customcheckbox1" TargetType="{x:Type CheckBox}">
                        <BulletDecorator>
                            <BulletDecorator.Bullet>
                                <Image
                                    Name="TickImage"
                                    Width="23"
                                    Height="23"
                                    Source="https://qiita-image-store.s3.amazonaws.com/0/326020/profile-images/1544679258" />
                            </BulletDecorator.Bullet>
                            <ContentPresenter VerticalAlignment="Center" Style="{StaticResource customcontentpresenterstyle1}" />
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <!--  オン状態のイメージ  -->
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="TickImage" Property="Source" Value="https://qiita-image-store.s3.amazonaws.com/0/326020/profile-images/1544679258" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Grid.Resources>

                <StackPanel>
                    <CheckBox>Default Style</CheckBox>
                    <CheckBox IsChecked="True" Template="{StaticResource customcheckbox1}">Custom CheckBox 1</CheckBox>
                    <CheckBox Template="{StaticResource customcheckbox1}">Custom CheckBox 2</CheckBox>
                    <CheckBox
                        IsChecked="True"
                        Style="{StaticResource customcheckboxstyle1}"
                        Template="{StaticResource customcheckbox1}">
                        Custom CheckBox 3
                    </CheckBox>
                    <CheckBox
                        IsChecked="False"
                        Style="{StaticResource customcheckboxstyle1}"
                        Template="{StaticResource customcheckbox1}">
                        Custom CheckBox 4
                    </CheckBox>
                </StackPanel>
            </Grid>



        </StackPanel>
    </ScrollViewer>
</Window>
