<UserControl
    x:Class="MultiSelectComboBoxTest1.MultiSelectComboBox1"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:MultiSelectComboBoxTest1"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="2"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="14,0,0,0"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070" />
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121" />
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF" />
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF" />
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070" />
        <Style x:Key="CheckBoxLarge" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid
                            x:Name="templateRoot"
                            Background="Transparent"
                            SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border
                                x:Name="checkBoxBorder"
                                Margin="1"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <!--  gridのw,hを24とか直接指定すると2倍とかになる  -->
                                <Grid x:Name="markGrid">
                                    <!--  Width,Height,Stretch="Uniform",Margin  -->
                                    <Path
                                        x:Name="optionMark"
                                        Margin="2"
                                        Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                        Fill="{StaticResource OptionMark.Static.Glyph}"
                                        Opacity="0"
                                        Stretch="Uniform" />
                                    <Rectangle
                                        x:Name="indeterminateMark"
                                        Height="4"
                                        Margin="2"
                                        Fill="{StaticResource OptionMark.Static.Glyph}"
                                        Opacity="0" />
                                </Grid>
                            </Border>
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                                <Setter Property="Padding" Value="4,-1,0,0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.MouseOver.Background}" />
                                <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.MouseOver.Border}" />
                                <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                                <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.Disabled.Background}" />
                                <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.Disabled.Border}" />
                                <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.Disabled.Glyph}" />
                                <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.Disabled.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.Pressed.Background}" />
                                <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.Pressed.Border}" />
                                <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.Pressed.Glyph}" />
                                <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.Pressed.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                                <Setter TargetName="indeterminateMark" Property="Opacity" Value="0" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="optionMark" Property="Opacity" Value="0" />
                                <Setter TargetName="indeterminateMark" Property="Opacity" Value="1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <ComboBox
        x:Name="MultiSelectCombo"
        IsSynchronizedWithCurrentItem="True"
        OverridesDefaultStyle="True"
        ScrollViewer.CanContentScroll="True"
        ScrollViewer.HorizontalScrollBarVisibility="Auto"
        ScrollViewer.PanningMode="Both"
        ScrollViewer.VerticalScrollBarVisibility="Auto"
        SnapsToDevicePixels="True">
        <!--  ItemsControl.ItemTemplateを設定  -->
        <!--  各項目のデータ オブジェクトをどのように表示するかを決定する(リストの中身をつくる)  -->
        <ComboBox.ItemTemplate>
            <DataTemplate>
                <CheckBox
                    Name="CheckBox_aaa"
                    Click="CheckBox_Click"
                    Content="{Binding Title}"
                    IsChecked="{Binding Path=IsSelected, Mode=TwoWay}"
                    Tag="{RelativeSource FindAncestor,
                                         AncestorType={x:Type ComboBox}}" />
            </DataTemplate>
        </ComboBox.ItemTemplate>
        <!--  ItemsControl.Templateの設定  -->
        <!--  主に Border コントロール等で全体の枠線や背景色の設定を行う  -->
        <ComboBox.Template>
            <ControlTemplate TargetType="ComboBox">
                <Grid>
                    <!--  コンボボックスのテキスト表示部分  -->
                    <ToggleButton
                        x:Name="ToggleButton"
                        Grid.Column="2"
                        HorizontalContentAlignment="Left"
                        ClickMode="Press"
                        Focusable="false"
                        IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                        <ToggleButton.Template>
                            <ControlTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="18" />
                                    </Grid.ColumnDefinitions>
                                    <Border
                                        x:Name="Border"
                                        Grid.ColumnSpan="2"
                                        Background="White"
                                        BorderBrush="Black"
                                        BorderThickness="1,1,1,1"
                                        CornerRadius="2" />
                                    <Border
                                        x:Name="BorderComp"
                                        Grid.Column="0"
                                        Margin="1"
                                        Background="White"
                                        BorderBrush="Black"
                                        BorderThickness="0,0,0,0"
                                        CornerRadius="2">
                                        <TextBlock
                                            Padding="3"
                                            Background="White"
                                            Text="{Binding Path=Text, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" />
                                    </Border>
                                    <Path
                                        x:Name="Arrow"
                                        Grid.Column="1"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="M 0 0 L 4 4 L 8 0 Z"
                                        Fill="Black" />
                                </Grid>
                            </ControlTemplate>
                        </ToggleButton.Template>
                    </ToggleButton>
                    <!--  コンボボックスをクリックしたときに表示されるポップアップ  -->
                    <!--  事実上、ここにチェックボックスが表示される  -->
                    <Popup
                        Name="Popup"
                        AllowsTransparency="True"
                        Focusable="False"
                        IsOpen="{TemplateBinding IsDropDownOpen}"
                        Placement="Bottom"
                        PopupAnimation="Slide">
                        <Grid
                            Name="DropDown"
                            MinWidth="{TemplateBinding ActualWidth}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                            SnapsToDevicePixels="True">
                            <Border
                                x:Name="DropDownBorder"
                                Background="White"
                                BorderBrush="Black"
                                BorderThickness="1">
                                <!--  チェックボックスがのっかる部分  -->
                                <ScrollViewer
                                    Margin="4,6,4,6"
                                    DataContext="{Binding}"
                                    SnapsToDevicePixels="True">
                                    <StackPanel>
                                        <CheckBox
                                            Margin="5,1,0,1"
                                            HorizontalAlignment="Left"
                                            VerticalContentAlignment="Center"
                                            Content="{Binding SelectAllContent, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                                            IsChecked="{x:Null}"
                                            IsThreeState="True" />
                                        <!--<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />-->
                                        <ItemsPresenter
                                            x:Name="PART_ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </StackPanel>
                                </ScrollViewer>
                            </Border>
                        </Grid>
                    </Popup>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="HasItems" Value="false">
                        <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                    </Trigger>
                    <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                        <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                        <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </ComboBox.Template>
    </ComboBox>
</UserControl>
