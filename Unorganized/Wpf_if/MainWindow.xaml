<Window
    x:Class="Wpf_if.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Wpf_if"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="MainWindow"
    Width="800"
    Height="450"
    mc:Ignorable="d">
    <Window.DataContext>
        <local:ViewModel />
    </Window.DataContext>
    <Canvas>
        <TextBox
            Canvas.Left="547"
            Canvas.Top="52"
            Width="128"
            Height="27"
            Text="{Binding Name, Mode=TwoWay}" />
        <Button
            Canvas.Left="526"
            Canvas.Top="128"
            Width="128"
            Height="27">
            <Button.Style>
                <!--  TargetTypeを指定しないと設定できるプロパティに何があるかわからないので指定する  -->
                <Style TargetType="Button">
                    <!--  通常は背景色、赤  -->
                    <Setter Property="Background" Value="Red" />
                    <Style.Triggers>
                        <!--  Nameプロパティが空文字かnullなら背景色を青に  -->
                        <DataTrigger Binding="{Binding Name}" Value="">
                            <Setter Property="Background" Value="Blue" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Name}" Value="{x:Null}">
                            <Setter Property="Background" Value="Blue" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <CheckBox
            Canvas.Left="526"
            Canvas.Top="217"
            Width="128"
            Height="27">
            <CheckBox.Style>
                <Style TargetType="CheckBox">
                    <!--  And条件に合わない場合の状態も記述する  -->
                    <Setter Property="IsEnabled" Value="False" />
                    <Setter Property="IsTabStop" Value="False" />
                    <Setter Property="Content" Value="aaa" />
                    <!--  And条件はMultiDataTriggerで定義する  -->
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Flag1}" Value="True" />
                                <Condition Binding="{Binding Flag2}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="IsEnabled" Value="True" />
                                <Setter Property="Content" Value="第一" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Flag1}" Value="True" />
                                <Condition Binding="{Binding Flag2}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="IsEnabled" Value="False" />
                                <Setter Property="Content" Value="第二" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </CheckBox.Style>
        </CheckBox>






        <Border
            Name="border"
            Canvas.Left="10"
            Canvas.Top="73"
            Width="128"
            Height="117"
            BorderThickness="1">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="BorderBrush" Value="Red" />
                    <Style.Triggers>
                        <!--<DataTrigger
                            Binding="{Binding Path=IsMouseOver}"
                            Value="True">
                            <Setter Property="BorderBrush" Value="Blue" />
                        </DataTrigger>-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="Yellow" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>
        <Button
            x:Name="ButtonElementName1"
            Width="128"
            Margin="158,73,514,218"
            Content="Button">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Foreground" Value="Red" />
                    <Setter Property="Background" Value="Blue" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Yellow" />
                        </Trigger>
                        <!--<DataTrigger Binding="{Binding IsMouseOver}" Value="True">
                            <Setter Property="Foreground" Value="Yellow" />
                        </DataTrigger>-->
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Label
            Width="128"
            Height="27"
            Margin="10,10,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            FontSize="9"
            Visibility="Visible">
            <!--  LabelのプロパティでContentを指定すると定数になってSetterで変更不可になる模様。  -->
            <Label.Style>
                <Style BasedOn="{StaticResource {x:Type Label}}" TargetType="Label">
                    <!--<Style TargetType="Label">-->
                    <Setter Property="Content" Value="Test" />
                    <Setter Property="Foreground" Value="Red" />
                    <Setter Property="Background" Value="Blue" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=ButtonElementName1}" Value="True">
                            <Setter Property="Content" Value="ボタンの上にカーソルがあります" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=ButtonElementName1}" Value="False">
                            <Setter Property="Content" Value="ないよ" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Label.Style>
        </Label>

    </Canvas>
</Window>
